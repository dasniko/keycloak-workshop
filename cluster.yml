version: '3.8'

services:
  postgres:
    image: docker.io/postgres:15
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: passw0rd
    volumes:
      - kc-data:/var/lib/postgresql/data

  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    command: start -Djgroups.dns.query=keycloak
    environment:
      # HTTP_PROXY: http://proxy:3128
      # HTTPS_PROXY: http://proxy:3128
      KC_CACHE_STACK: kubernetes
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_PORT: '5432'
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: passw0rd
      KC_PROXY: reencrypt
      KC_HOSTNAME: localhost
      KC_HTTPS_CERTIFICATE_FILE: /opt/keycloak/certs/localhost.crt
      KC_HTTPS_CERTIFICATE_KEY_FILE: /opt/keycloak/certs/localhost.key
      KC_SPI_TRUSTSTORE_FILE_FILE: /opt/keycloak/certs/truststore.jks
      KC_SPI_TRUSTSTORE_FILE_PASSWORD: changeit
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    deploy:
      replicas: 2
      endpoint_mode: dnsrr
    volumes:
      - ./providers:/opt/keycloak/providers
      - ./themes:/opt/keycloak/themes
      - ./certs:/opt/keycloak/certs
    depends_on:
      - postgres

  lb:
    image: docker.io/nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certs:/etc/tls
    ports:
      - "443:443"
    depends_on:
      - keycloak

volumes:
  kc-data:
    name: keycloak-workshop-pg-data
